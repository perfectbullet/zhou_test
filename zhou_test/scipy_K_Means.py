#!/usr/bin/env python
# encoding=utf-8

from scipy.cluster.vq import kmeans
import numpy as np

from sklearn.cluster import KMeans
import numpy as np



if __name__ == '__main__':
    rho_ls = [354.0, 520.2104250675226, 102.0, 218.0, 370.0, 2.4530790288343014, 62.0, 378.0, 79.86530686219584, 70.0, 102.5304832720494, 362.0, 234.0, 83.35287027944808, 498.0, 322.0, 242.0, 202.0, 210.0, 226.0, 103.10558734015946, 234.33464564248752, 406.0, 518.9858182238038, 238.0, 573.7948695853304, 110.0, 422.0, 250.0, 346.0, 338.0, 134.0, 450.0, 86.0, 14.544363332018845, 118.0, 290.0, 490.0, 24.336347541356208, 386.0, 258.0, 142.0, 394.0, 78.0, 90.75828359755833, 194.0, 330.0, 46.0, 104.89590470878007, 298.0, 342.0, 474.0, 350.0, 178.0, 458.0, 282.0, 38.0, 6.0, 22.581431965460578, 382.0, 374.0, 366.0, 126.0, 478.0, 334.0, 85.3725400127892, 278.0, 286.0, 246.0, 162.0, 94.0, 170.0, 186.0]
    theta_ls = [1.5707963267948966, 0.5227890853804023, 0.0, 1.5707963267948966, 1.5707963267948966, 0.8293259304743381, 0.0, 1.5707963267948966, 1.3278297333873983, 0.0, 0.7853981633974483, 1.5707963267948966, 1.5707963267948966, 0.6980446565065943, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 0.4616047109234712, 0.5054767088632103, 0.0, 0.5226507727948387, 0.0, 0.4953112310764204, 0.0, 0.0, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 0.0, 1.5707963267948966, 0.0, 0.8541731331747475, 0.0, 1.5707963267948966, 1.5707963267948966, 0.8989812539854695, 1.5707963267948966, 1.5707963267948966, 0.0, 1.5707963267948966, 0.0, 1.3507874978460492, 1.5707963267948966, 1.5707963267948966, 0.0, 0.4549142065923795, 1.5707963267948966, 0.0, 1.5707963267948966, 0.0, 1.5707963267948966, 1.5707963267948966, 1.5707963267948966, 0.0, 0.0, 0.767436023549591, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3258176636680326, 0.0, 0.0, 0.0, 1.5707963267948966, 0.0, 1.5707963267948966, 1.5707963267948966]

    rho_ls2 = [125.48002654089167, 51.12496796483115, 173.58694866205838, 88.66819825501662, 91.46854289657533,
              92.47539815104558, 112.42789487374264, 207.1125842409862, 110.25945160375157]
    theta_ls2 = [0.3617292415199321, 0.3390172840645261, 0.33832362250925946, 1.3615167763473564, 1.3854483767992019,
        1.3865203792472314, 1.226577643812429, 0.5840810550228075, 1.270849170297955]

    rho_ls3 = [23.666421964036868, 13.552164460250687, 308.5353237137209, 300.27494059529994,
              99.34889476270601]
    theta_ls3 = [0.22449735614507682, 0.22036242435665704, 1.4795866870382102,
                                              1.4638611727999131, 0.5424315699899498]

    rho_ls4 = [38.801962303291134, 583.2224586000864, 54.16569187828211, 215.25402719714344, 140.6333244958779,
              225.64454260510084, 292.58534751423207, 346.236018409608, 261.64915905329747]
    theta_ls4 = [0.3203280802493841, 0.6071849027026275, 0.32316498061040816, 0.6919213822388588, 1.4743225516123097,
        1.5376958380795585, 1.519170508031334, 0.6644953990947569, 1.5446584899115434]

    from numpy import array
    from scipy.cluster.vq import kmeans, whiten
    import matplotlib.pyplot as plt

    rho_theta_ls = [(theta_ls2[i], rho_ls2[i]) for i in range(len(theta_ls2))]
    features = array(rho_theta_ls)
    # Whiten data
    whitened = whiten(features)
    # print(whitened)
    # # Find 2 clusters in the data
    codebook, distortion = kmeans(features, 3)
    # Plot whitened data and cluster centers in red
    plt.scatter(features[:, 0], features[:, 1])
    plt.scatter(codebook[:, 0], codebook[:, 1], c='r', marker='+')
    # print(features)
    print(codebook)
    print(distortion)
    plt.show()